#region Description
/*================================================================================
 *  Copyright (c) agile.  All rights reserved.
 * ===============================================================================
 * Solution: AuthorizeCenter
 * Module:  RolePrivilege
 * Descrption:
 * CreateDate: 2010/11/18 13:55:35
 * Author: trenhui
 * Version:1.0
 * ===============================================================================
 * History
 *
 * Update Descrption:
 * Remark:
 * Update Time:
 * Author:generated by codesmithTemplate
 * 
 * ===============================================================================*/
#endregion
using System;
using System.Data;
using System.Collections.Generic;

using System.Linq;


using AgileEAP.Core;
using AgileEAP.Core.Data;
using AgileEAP.Core.Extensions;
using AgileEAP.Core.Caching;
using AgileEAP.Core.Service;

using AgileEAP.Infrastructure.Domain;


namespace AgileEAP.Infrastructure.Service
{
    public class SpecialPrivilegeService :  BaseService<string,SpecialPrivilege>
    {
		#region Fields
		private readonly ILogger log = LogManager.GetLogger(typeof(SpecialPrivilegeService));
		#endregion
		
		#region Constructors
		
		public SpecialPrivilegeService(){ }
		#endregion

        #region ISpecialPrivilegeService Imp
        public void SaveSpecialPrivilege(IList<SpecialPrivilege> specialPrivilege)
        {

            using (ITransaction trans = UnitOfWork.BeginTransaction(typeof(SpecialPrivilege)))
            {
                //删除已经存在的
                repository.ExecuteSql<SpecialPrivilege>(string.Format("delete from AC_SpecialPrivilege where OperatorID='{0}' and AuthFlag={1}", specialPrivilege[0].OperatorID, specialPrivilege[0].AuthFlag));

                foreach (var p in specialPrivilege)
                {
                    repository.SaveOrUpdate(p);
                }
                trans.Commit();
            }
            ClearCache(typeof(SpecialPrivilege));
        }

        #endregion
		
		#region Internal Methods

        #endregion
    }
}
#region Description
/*================================================================================
 *  Copyright (c) SunTek.  All rights reserved.
 * ===============================================================================
 * Solution: Workflow
 * Module:  ProcessInst
 * Descrption:
 * CreateDate: 2010/11/18 14:21:45
 * Author: trenhui
 * Version:1.0
 * ===============================================================================
 * History
 *
 * Update Descrption:
 * Remark:
 * Update Time:
 * Author:generated by codesmithTemplate
 * 
 * ===============================================================================*/
#endregion
using System;
using System.Collections;
using System.Collections.Generic;

using AgileEAP.Core.Domain;
using AgileEAP.Core.Extensions;



namespace AgileEAP.Workflow.Domain
{
    [Serializable]
    public partial class ProcessInst :DomainObject<string>
    {
        #region Fields
		
		private string _name = string.Empty;
		private string _processDefID = string.Empty;
		private string _processDefName = string.Empty;
		private string _parentProcessID = string.Empty;
		private string _parentActivityID = string.Empty;
		private short _currentState = default(Int16);
		private System.DateTime _limitTime = DateTime.Now;
		private System.DateTime _startTime = DateTime.Now;
		private System.DateTime _endTime = DateTime.Now;
		private System.DateTime _finalTime = DateTime.Now;
		private System.DateTime _remindTime = DateTime.Now;
		private short _isTimeOut = default(Int16);
		private System.DateTime _timeOutTime = DateTime.Now;
		private string _processVersion = string.Empty;
		private string _description = string.Empty;
		private string _creator = string.Empty;
		private System.DateTime _createTime = DateTime.Now;
		
		
        #endregion

        #region Constructors
		public ProcessInst(){}
		
		
		public ProcessInst(string id,string name,string processDefID,string processDefName,string parentProcessID,string parentActivityID,short currentState,System.DateTime limitTime,System.DateTime startTime,System.DateTime endTime,System.DateTime finalTime,System.DateTime remindTime,short isTimeOut,System.DateTime timeOutTime,string processVersion,string description,string creator,System.DateTime createTime)
		{
		  this.ID=id;
		this._name=name;
		this._processDefID=processDefID;
		this._processDefName=processDefName;
		this._parentProcessID=parentProcessID;
		this._parentActivityID=parentActivityID;
		this._currentState=currentState;
		this._limitTime=limitTime;
		this._startTime=startTime;
		this._endTime=endTime;
		this._finalTime=finalTime;
		this._remindTime=remindTime;
		this._isTimeOut=isTimeOut;
		this._timeOutTime=timeOutTime;
		this._processVersion=processVersion;
		this._description=description;
		this._creator=creator;
		this._createTime=createTime;
		}
        #endregion

        #region Methods

        public override int GetHashCode()
        {
            System.Text.StringBuilder sb = new System.Text.StringBuilder();
            
            sb.Append(this.GetType().FullName);
			sb.Append(_name);
			sb.Append(_processDefID);
			sb.Append(_processDefName);
			sb.Append(_parentProcessID);
			sb.Append(_parentActivityID);
			sb.Append(_currentState);
			sb.Append(_limitTime);
			sb.Append(_startTime);
			sb.Append(_endTime);
			sb.Append(_finalTime);
			sb.Append(_remindTime);
			sb.Append(_isTimeOut);
			sb.Append(_timeOutTime);
			sb.Append(_processVersion);
			sb.Append(_description);
			sb.Append(_creator);
			sb.Append(_createTime);

            return sb.ToString().GetHashCode();
        }
		
		public virtual bool Validate()
        {
			return true;
        }

        #endregion

        #region Properties
		
		/// <summary>
        /// 名称
        /// </summary>
		public virtual string Name
        {
            get { return  _name; }
			set	{	_name =  value;}
        }
		
		/// <summary>
        /// 流程定义ID
        /// </summary>
		public virtual string ProcessDefID
        {
            get { return  _processDefID; }
			set	{	_processDefID =  value;}
        }
		
		/// <summary>
        /// 流程名称
        /// </summary>
		public virtual string ProcessDefName
        {
            get { return  _processDefName; }
			set	{	_processDefName =  value;}
        }
		
		/// <summary>
        /// 父流程
        /// </summary>
		public virtual string ParentProcessID
        {
            get { return  _parentProcessID; }
			set	{	_parentProcessID =  value;}
        }
		
		/// <summary>
        /// 父活动
        /// </summary>
		public virtual string ParentActivityID
        {
            get { return  _parentActivityID; }
			set	{	_parentActivityID =  value;}
        }
		
		/// <summary>
        /// 当前状态
        /// </summary>
		public virtual short CurrentState
        {
            get { return  _currentState; }
			set	{	_currentState =  value;}
        }
		
		/// <summary>
        /// 限期时间
        /// </summary>
		public virtual System.DateTime LimitTime
        {
            get { return  _limitTime.ToSafeDateTime(); }
			set	{	_limitTime =  value.ToSafeDateTime();}
        }
		
		/// <summary>
        /// 启动时间
        /// </summary>
		public virtual System.DateTime StartTime
        {
            get { return  _startTime.ToSafeDateTime(); }
			set	{	_startTime =  value.ToSafeDateTime();}
        }
		
		/// <summary>
        /// 结束时间
        /// </summary>
		public virtual System.DateTime EndTime
        {
            get { return  _endTime.ToSafeDateTime(); }
			set	{	_endTime =  value.ToSafeDateTime();}
        }
		
		/// <summary>
        /// 终止时间
        /// </summary>
		public virtual System.DateTime FinalTime
        {
            get { return  _finalTime.ToSafeDateTime(); }
			set	{	_finalTime =  value.ToSafeDateTime();}
        }
		
		/// <summary>
        /// 提醒时间
        /// </summary>
		public virtual System.DateTime RemindTime
        {
            get { return  _remindTime.ToSafeDateTime(); }
			set	{	_remindTime =  value.ToSafeDateTime();}
        }
		
		/// <summary>
        /// 是否超时
        /// </summary>
		public virtual short IsTimeOut
        {
            get { return  _isTimeOut; }
			set	{	_isTimeOut =  value;}
        }
		
		/// <summary>
        /// 超时时间
        /// </summary>
		public virtual System.DateTime TimeOutTime
        {
            get { return  _timeOutTime.ToSafeDateTime(); }
			set	{	_timeOutTime =  value.ToSafeDateTime();}
        }
		
		/// <summary>
        /// 所属流程版本
        /// </summary>
		public virtual string ProcessVersion
        {
            get { return  _processVersion; }
			set	{	_processVersion =  value;}
        }
		
		/// <summary>
        /// 描述
        /// </summary>
		public virtual string Description
        {
            get { return  _description; }
			set	{	_description =  value;}
        }
		
		/// <summary>
        /// 创建者
        /// </summary>
		public virtual string Creator
        {
            get { return  _creator; }
			set	{	_creator =  value;}
        }
		
		/// <summary>
        /// 创建时间
        /// </summary>
		public virtual System.DateTime CreateTime
        {
            get { return  _createTime.ToSafeDateTime(); }
			set	{	_createTime =  value.ToSafeDateTime();}
        }
		
        #endregion
    }
}

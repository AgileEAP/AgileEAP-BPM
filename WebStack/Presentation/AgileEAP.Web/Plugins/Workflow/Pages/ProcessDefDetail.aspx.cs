#region Description
/*================================================================================
 *  Copyright (c) SunTek.  All rights reserved.
 * ===============================================================================
 * Solution: Workflow
 * Module:  ProcessDef
 * Descrption:
 * CreateDate: 2010/11/18 12:00:10
 * Author: trenhui
 * Version:1.0
 * ===============================================================================
 * History
 *
 * Update Descrption:
 * Remark:
 * Update Time:
 * Author:generated by codesmithTemplate
 * 
 * ===============================================================================*/
#endregion
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Reflection;



using AgileEAP.Core;

using AgileEAP.Core.Service;
using AgileEAP.Core.Security;
using AgileEAP.Core.Extensions;
using AgileEAP.Core.Web;
using AgileEAP.Core.Caching;
using AgileEAP.Core.Utility;
using AgileEAP.Core.FastInvoker;
using AgileEAP.WebControls;
using AgileEAP.Workflow.Domain;
using AgileEAP.Infrastructure.Domain;
using AgileEAP.Infrastructure.Service;

using AgileEAP.Workflow.Engine;

namespace AgileEAP.Plugin.Workflow
{
    public partial class ProcessDefDetail : BasePage
    {
        
        #region ---界面处理方法---

        protected bool ShowPageDetail()
        {
            cboCurrentState.BindCombox(AgileEAP.Workflow.Enums.ProcessStatus.Candidate);
            cboCurrentFlag.BindCombox(Options.No);
            cboIsActive.BindCombox(Options.No);
            cboCategoryID.BindDict("ProcessCategory");

            if (PageContext.Action == ActionType.Add)
            {
                return false;
            }

            ProcessDef entity = repository.GetDomain<ProcessDef>(CurrentId);

            if (entity == null) return false;

            SetControlValues(entity);
            cboCurrentState.SelectedValue = entity.CurrentState.ToSafeString();
            cboIsActive.SelectedValue = entity.IsActive.ToSafeString();
            cboCategoryID.SelectedValue = entity.CategoryID;

            return true;
        }

        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                ShowPageDetail();
            }
        }

        #endregion

        #region ---操作处理方法---

        /// <summary>
        /// 保存
        /// </summary>
        public string Save(string argument)
        {
            AjaxResult ajaxResult = new AjaxResult();

            string errorMsg = string.Empty;
            DoResult actionResult = DoResult.Failed;
            string actionMessage = string.Empty;
            try
            {
                ProcessDef processDef = JsonConvert.DeserializeObject<ProcessDef>(argument);
                processDef.Content = HttpUtility.UrlDecode(processDef.Content);
                if (PageContext.Action == ActionType.Add)
                {
                    processDef.CreateTime = DateTime.Now;
                    processDef.Creator = User.ID;
                }
                else if (PageContext.Action == ActionType.Update)
                {
                    processDef.ModifyTime = DateTime.Now;
                    processDef.Modifier = User.ID;
                }
                processDef.ID = string.IsNullOrEmpty(CurrentId) ? CurrentId = IdGenerator.NewComb().ToString() : CurrentId;

                if (processDef.CurrentFlag == 1)  //是当前版本
                {
                    IDictionary<string, object> parameters = new Dictionary<string, object>();
                    parameters.Add("Name", processDef.Name);
                    parameters.Add("CurrentFlag", 1);

                    if (repository.FindOne<ProcessDef>(parameters) == null)
                    {
                        repository.SaveOrUpdate(processDef);
                        actionResult = DoResult.Success;

                        //获取提示信息
                        actionMessage = RemarkAttribute.GetEnumRemark(actionResult);

                        //记录操作日志
                        AddActionLog(processDef, actionResult, string.Format("保存流程{0}成功", processDef.ID));

                        ajaxResult.Result = actionResult;
                    }
                    else
                    {
                        actionMessage = "已存在同名当前版本，请重新选择‘是否当前版本’！";
                    }
                }
                else
                {

                    repository.SaveOrUpdate(processDef);
                    actionResult = DoResult.Success;

                    //获取提示信息
                    actionMessage = RemarkAttribute.GetEnumRemark(actionResult);

                    //记录操作日志
                    AddActionLog(processDef, actionResult, string.Format("保存流程{0}成功", processDef.Name));

                    ajaxResult.Result = actionResult;
                }
                ajaxResult.RetValue = processDef.ID;
                ajaxResult.PromptMsg = actionMessage;
                CacheManager.Remove("all_ProcessDefine");
            }
            catch (Exception ex)
            {
                actionMessage = RemarkAttribute.GetEnumRemark(actionResult);
                log.Error(actionMessage, ex);
            }

            return JsonConvert.SerializeObject(ajaxResult);
        }

        #endregion
    }
}

#region Description
/*================================================================================
 *  Copyright (c) SunTek.  All rights reserved.
 * ===============================================================================
 * Solution: AuthorizeCenter
 * Module:  SpecialPrivilege
 * Descrption:
 * CreateDate: 2010/11/18 13:55:35
 * Author: trenhui
 * Version:1.0
 * ===============================================================================
 * History
 *
 * Update Descrption:
 * Remark:
 * Update Time:
 * Author:generated by codesmithTemplate
 * 
 * ===============================================================================*/
#endregion
using System;
using System.Collections;
using System.Collections.Generic;

using AgileEAP.Core.Domain;
using AgileEAP.Core.Extensions;



namespace AgileEAP.Infrastructure.Domain
{
    public partial class SpecialPrivilege :DomainObject<string>
    {
        #region Fields
		
		private string _operatorID = string.Empty;
		private string _privilegeID = string.Empty;
		private short _authFlag = default(Int16);
		private string _appID = string.Empty;
		private System.DateTime _startTime = DateTime.Now;
		private System.DateTime _endTime = DateTime.Now;
		private int _sortOrder = default(Int32);
		private string _ownerOrg = string.Empty;
		private string _authorizer = string.Empty;
		private System.DateTime _authTime = DateTime.Now;
		
		
        #endregion

        #region Constructors
		public SpecialPrivilege(){}
		
		
		public SpecialPrivilege(string id,string operatorID,string privilegeID,short authFlag,string appID,System.DateTime startTime,System.DateTime endTime,int sortOrder,string ownerOrg,string authorizer,System.DateTime authTime)
		{
		  this.ID=id;
		this._operatorID=operatorID;
		this._privilegeID=privilegeID;
		this._authFlag=authFlag;
		this._appID=appID;
		this._startTime=startTime;
		this._endTime=endTime;
		this._sortOrder=sortOrder;
		this._ownerOrg=ownerOrg;
		this._authorizer=authorizer;
		this._authTime=authTime;
		}
        #endregion

        #region Methods

        public override int GetHashCode()
        {
            System.Text.StringBuilder sb = new System.Text.StringBuilder();
            
            sb.Append(this.GetType().FullName);
			sb.Append(_operatorID);
			sb.Append(_privilegeID);
			sb.Append(_authFlag);
			sb.Append(_appID);
			sb.Append(_startTime);
			sb.Append(_endTime);
			sb.Append(_sortOrder);
			sb.Append(_ownerOrg);
			sb.Append(_authorizer);
			sb.Append(_authTime);

            return sb.ToString().GetHashCode();
        }
		
		public virtual bool Validate()
        {
			return true;
        }

        #endregion

        #region Properties
		
		/// <summary>
        /// 操作员ID
        /// </summary>
		public virtual string OperatorID
        {
            get { return  _operatorID; }
			set	{	_operatorID =  value;}
        }
		
		/// <summary>
        /// 权限ID
        /// </summary>
		public virtual string PrivilegeID
        {
            get { return  _privilegeID; }
			set	{	_privilegeID =  value;}
        }
		
		/// <summary>
        /// 1：特别开通，2：特别禁止
        /// </summary>
		public virtual short AuthFlag
        {
            get { return  _authFlag; }
			set	{	_authFlag =  value;}
        }
		
		/// <summary>
        /// 冗余字段
        /// </summary>
		public virtual string AppID
        {
            get { return  _appID; }
			set	{	_appID =  value;}
        }
		
		/// <summary>
        /// 生效时间
        /// </summary>
		public virtual System.DateTime StartTime
        {
            get { return  _startTime.ToSafeDateTime(); }
			set	{	_startTime =  value.ToSafeDateTime();}
        }
		
		/// <summary>
        /// 失效时间
        /// </summary>
		public virtual System.DateTime EndTime
        {
            get { return  _endTime.ToSafeDateTime(); }
			set	{	_endTime =  value.ToSafeDateTime();}
        }
		
		/// <summary>
        /// 序号
        /// </summary>
		public virtual int SortOrder
        {
            get { return  _sortOrder; }
			set	{	_sortOrder =  value;}
        }
		
		/// <summary>
        /// 归属组织
        /// </summary>
		public virtual string OwnerOrg
        {
            get { return  _ownerOrg; }
			set	{	_ownerOrg =  value;}
        }
		
		/// <summary>
        /// 授权人
        /// </summary>
		public virtual string Authorizer
        {
            get { return  _authorizer; }
			set	{	_authorizer =  value;}
        }
		
		/// <summary>
        /// 授权时间
        /// </summary>
		public virtual System.DateTime AuthTime
        {
            get { return  _authTime.ToSafeDateTime(); }
			set	{	_authTime =  value.ToSafeDateTime();}
        }
		
        #endregion
    }
}

#region Description
/*================================================================================
 *  Copyright (c) agile.  All rights reserved.
 * ===============================================================================
 * Solution: AuthorizeCenter
 * Module:  Operator
 * Descrption:
 * CreateDate: 2010/11/18 13:55:34
 * Author: trenhui
 * Version:1.0
 * ===============================================================================
 * History
 *
 * Update Descrption:
 * Remark:
 * Update Time:
 * Author:generated by codesmithTemplate
 * 
 * ===============================================================================*/
#endregion
using System;
using System.Data;
using System.Collections.Generic;
using System.Linq;


using AgileEAP.Core;
using AgileEAP.Core.Data;
using AgileEAP.Core.Caching;
using AgileEAP.Core.Service;


using AgileEAP.Core.Extensions;
using AgileEAP.Infrastructure.Domain;

namespace AgileEAP.Infrastructure.Service
{
    public class OperatorService : BaseService<string, Operator>
    {
        #region Fields
        private readonly ILogger log = LogManager.GetLogger(typeof(OperatorService));
        #endregion

        #region Constructors

        public OperatorService() { }
        #endregion

        public DataTable GetOperatorByOrg(IDictionary<string, object> parameters, PageInfo pageInfo,string filter="")
        {
            string cmdText = string.Format("select T1.id,username,loginname,orgid,creator,createTime,[status] from AC_Operator t1 join OM_EmployeeOrg t2 on t1.ID=t2.employeeid ");
            if (!string.IsNullOrEmpty(filter))
            {
                cmdText +=" where "+filter+" and 1=1 ";
            }
            //cmdText += " order by createtime desc ";
            return repository.ExecuteDataTable<Operator>(cmdText, parameters," createtime desc ", pageInfo);
        }

        /// <summary>
        /// 根据用户取得相应的页面权限（已经处理特殊权限）
        /// </summary>
        /// <param name="userID">用户ID</param>
        /// <returns></returns>
        public List<string> GetPrivilegeIDs(string userID)
        {
            List<string> privilegeIDs = GetAllPrivilegeIDs(userID);
            //特殊权限添加
            List<SpecialPrivilege> specialPrivileges = new SpecialPrivilegeService().All().Where(o => o.OperatorID.Equals(userID, StringComparison.OrdinalIgnoreCase)).ToList();

            foreach (SpecialPrivilege item in specialPrivileges.ToList())
            {
                if (item.AuthFlag == 1)
                {
                    if (!privilegeIDs.Contains(item.PrivilegeID))
                        privilegeIDs.Add(item.PrivilegeID);
                }
                else if (item.AuthFlag == 2)
                {
                    privilegeIDs.Remove(item.PrivilegeID);
                }
            }

            return privilegeIDs;
        }

        /// <summary>
        /// 根据用户取得相应的页面权限（未处理特殊权限）
        /// </summary>
        /// <param name="userID">用户ID</param>
        /// <returns></returns>
        public List<string> GetAllPrivilegeIDs(string userID)
        {
            DataTable dt = repository.ExecuteDataTable<Operator>(string.Format(@"select c.PrivilegeID from AC_RolePrivilege c where c.RoleID in
                                                                        (select d.RoleID from OM_ObjectRole d where d.ObjectID='{0}')", userID)) ?? new DataTable();
            return dt.AsEnumerable().Select(dr => dr["PrivilegeID"].ToSafeString()).ToList();

        }


        /// <summary>
        /// 获取用户数据权限
        /// </summary>
        /// <param name="userID">用户ID</param>
        /// <returns></returns>
        public List<string> GetDataPriveleges(string userID)
        {
            DataTable dt = repository.ExecuteDataTable<Operator>(string.Format(@"select  Value from AC_MetaData a where a.ID in
                                                                        (select b.MetaDataID from AC_Privilege b where b.ID in 
                                                                        (select c.PrivilegeID from AC_RolePrivilege c where c.RoleID in
                                                                        (select d.RoleID from OM_ObjectRole d where d.ObjectID='{0}')))", userID)) ?? new DataTable();
            return dt.AsEnumerable().Select(dr => dr["Value"].ToSafeString()).ToList();
        }


        #region IOperatorService Imp


        #endregion

        #region Internal Methods

        #endregion
    }
}